plugins {
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'maven-publish'
    id 'io.codearte.nexus-staging' version '0.20.0'
    id 'java'
    id 'java-library'
    id 'signing'
    id 'jacoco'
}

apply plugin: 'jacoco'

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-starter-parent:2.2.0.RELEASE'
    }
}
group = 'com.github.kuliginstepan'
version = '1.0.0'
sourceCompatibility = 11

def nexusUsername = System.getenv("NEXUS_USERNAME") == null ? "${NEXUS_USERNAME}" : System.getenv("NEXUS_USERNAME")
def nexusPassword = System.getenv("NEXUS_PASSWORD") == null ? "${NEXUS_PASSWORD}" : System.getenv("NEXUS_PASSWORD")

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    api 'io.projectreactor:reactor-core'

    compileOnly 'org.springframework.data:spring-data-mongodb'
    compileOnly 'org.springframework.boot:spring-boot-actuator-autoconfigure'
    compileOnly 'org.mongodb:mongodb-driver-reactivestreams'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.testcontainers:junit-jupiter:1.12.1'
    testImplementation 'org.springframework.data:spring-data-mongodb'
    testImplementation 'org.mongodb:mongodb-driver-reactivestreams'
    testImplementation 'io.projectreactor:reactor-core'
}

test {
    useJUnitPlatform()
}

nexusStaging {
    username = nexusUsername
    password = nexusPassword
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        snapshot(MavenPublication) {
            artifactId = project.name
            version project.version + '-SNAPSHOT'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Mongration'
                description = 'MongoDB data migration tool for Spring Boot projects'
                url = 'https://github.com/KuliginStepan/mongration'
                developers {
                    developer {
                        id = 'kuliginstepan'
                        name = 'Stepan Kuligin'
                        email = 'kuligin_stepan@mail.ru'
                    }
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/KuliginStepan/mongration.git'
                    developerConnection = 'scm:git:ssh://github.com/KuliginStepan/mongration.git'
                    url = 'https://github.com/KuliginStepan/mongration'
                }
            }
        }
        release(MavenPublication) {
            artifactId = project.name
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Mongration'
                description = 'MongoDB data migration tool for Spring Boot projects'
                url = 'https://github.com/KuliginStepan/mongration'
                developers {
                    developer {
                        id = 'kuliginstepan'
                        name = 'Stepan Kuligin'
                        email = 'kuligin_stepan@mail.ru'
                    }
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/KuliginStepan/mongration.git'
                    developerConnection = 'scm:git:ssh://github.com/KuliginStepan/mongration.git'
                    url = 'https://github.com/KuliginStepan/mongration'
                }
            }
        }
    }
    repositories {
        maven {
            name = 'snapshot'
            url 'https://oss.sonatype.org/content/repositories/snapshots'
            credentials {
                username = nexusUsername
                password = nexusPassword
            }
        }
        maven {
            name = 'staging'
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                username = nexusUsername
                password = nexusPassword
            }
        }
    }
}

signing {
    sign publishing.publications.release
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}
